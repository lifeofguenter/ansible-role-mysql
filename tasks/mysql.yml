---

- name: Prerequisites
  ansible.builtin.apt:
    name: python3-pymysql
    state: present
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: Add apt key
  ansible.builtin.copy:
    src: mysql.asc
    dest: /etc/apt/trusted.gpg.d/mysql.asc
    mode: '0644'
  become: true

- name: Add repository
  ansible.builtin.apt_repository:
    repo: deb http://repo.mysql.com/apt/{{ ansible_distribution | lower }}/ {{ mysql_default_release }} mysql-{{ mysql_version }} mysql-tools
    state: present
  become: true

- name: Pre-create /etc/mysql/conf.d
  ansible.builtin.file:
    path: /etc/mysql/conf.d
    state: directory
    mode: '0755'
  become: true

# https://askubuntu.com/a/1328613
- name: Add custom.cnf
  ansible.builtin.template:
    src: custom.cnf
    dest: /etc/mysql/conf.d/custom.cnf
    mode: '0644'
  notify: Restart_mysql
  become: true

- name: Install mysql packages
  ansible.builtin.apt:
    name:
      - mysql-server
      - mysql-client
      - libmysqlclient-dev
    state: present
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: Ensure mysql is running
  ansible.builtin.systemd:
    name: mysql
    state: started
  become: true

- name: Create admin user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{% if mysql_auth_plugin == 'mysql_native_password' %}{{ mysql_password }}{% endif %}"
    host: "%"
    priv: "*.*:ALL,GRANT"
    state: present
    check_implicit_admin: true
    login_unix_socket: /var/run/mysqld/mysqld.sock
    plugin: "{{ mysql_auth_plugin }}"
    plugin_auth_string: "{% if mysql_auth_plugin == 'caching_sha2_password' %}{{ mysql_password }}{% endif %}"
    salt: "{{ mysql_auth_salt | default('') }}"
    sql_log_bin: false
    update_password: "{{ mysql_update_password | default('always') }}"
  no_log: true
  become: true

- name: Check for mysqld.cnf
  ansible.builtin.stat:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
  register: mysqld_cnf

- name: Disable stuff in mysqld.conf
  ansible.builtin.lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: "^(\\s*{{ item }}\\s*=.*)$"
    state: absent
  with_items:
    - bind-address
  become: true
  when: mysqld_cnf.stat.exists
  notify: Restart_mysql
